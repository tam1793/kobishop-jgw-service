/*
 * This file is generated by jOOQ.
*/
package kobishop.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import kobishop.Keys;
import kobishop.Kobishop;
import kobishop.tables.records.BrandRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Brand extends TableImpl<BrandRecord> {

    private static final long serialVersionUID = 1308174622;

    /**
     * The reference instance of <code>kobishop.brand</code>
     */
    public static final Brand BRAND = new Brand();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BrandRecord> getRecordType() {
        return BrandRecord.class;
    }

    /**
     * The column <code>kobishop.brand.id</code>.
     */
    public final TableField<BrandRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>kobishop.brand.name</code>.
     */
    public final TableField<BrandRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

    /**
     * Create a <code>kobishop.brand</code> table reference
     */
    public Brand() {
        this("brand", null);
    }

    /**
     * Create an aliased <code>kobishop.brand</code> table reference
     */
    public Brand(String alias) {
        this(alias, BRAND);
    }

    private Brand(String alias, Table<BrandRecord> aliased) {
        this(alias, aliased, null);
    }

    private Brand(String alias, Table<BrandRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Kobishop.KOBISHOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BrandRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BRAND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BrandRecord> getPrimaryKey() {
        return Keys.KEY_BRAND_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BrandRecord>> getKeys() {
        return Arrays.<UniqueKey<BrandRecord>>asList(Keys.KEY_BRAND_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Brand as(String alias) {
        return new Brand(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Brand rename(String name) {
        return new Brand(name, null);
    }
}
